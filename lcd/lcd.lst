                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module lcd
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _strlen
                                     13 	.globl _CY
                                     14 	.globl _AC
                                     15 	.globl _F0
                                     16 	.globl _RS1
                                     17 	.globl _RS0
                                     18 	.globl _OV
                                     19 	.globl _F1
                                     20 	.globl _P
                                     21 	.globl _PS
                                     22 	.globl _PT1
                                     23 	.globl _PX1
                                     24 	.globl _PT0
                                     25 	.globl _PX0
                                     26 	.globl _RD
                                     27 	.globl _WR
                                     28 	.globl _T1
                                     29 	.globl _T0
                                     30 	.globl _INT1
                                     31 	.globl _INT0
                                     32 	.globl _TXD
                                     33 	.globl _RXD
                                     34 	.globl _P3_7
                                     35 	.globl _P3_6
                                     36 	.globl _P3_5
                                     37 	.globl _P3_4
                                     38 	.globl _P3_3
                                     39 	.globl _P3_2
                                     40 	.globl _P3_1
                                     41 	.globl _P3_0
                                     42 	.globl _EA
                                     43 	.globl _ES
                                     44 	.globl _ET1
                                     45 	.globl _EX1
                                     46 	.globl _ET0
                                     47 	.globl _EX0
                                     48 	.globl _P2_7
                                     49 	.globl _P2_6
                                     50 	.globl _P2_5
                                     51 	.globl _P2_4
                                     52 	.globl _P2_3
                                     53 	.globl _P2_2
                                     54 	.globl _P2_1
                                     55 	.globl _P2_0
                                     56 	.globl _SM0
                                     57 	.globl _SM1
                                     58 	.globl _SM2
                                     59 	.globl _REN
                                     60 	.globl _TB8
                                     61 	.globl _RB8
                                     62 	.globl _TI
                                     63 	.globl _RI
                                     64 	.globl _P1_7
                                     65 	.globl _P1_6
                                     66 	.globl _P1_5
                                     67 	.globl _P1_4
                                     68 	.globl _P1_3
                                     69 	.globl _P1_2
                                     70 	.globl _P1_1
                                     71 	.globl _P1_0
                                     72 	.globl _TF1
                                     73 	.globl _TR1
                                     74 	.globl _TF0
                                     75 	.globl _TR0
                                     76 	.globl _IE1
                                     77 	.globl _IT1
                                     78 	.globl _IE0
                                     79 	.globl _IT0
                                     80 	.globl _P0_7
                                     81 	.globl _P0_6
                                     82 	.globl _P0_5
                                     83 	.globl _P0_4
                                     84 	.globl _P0_3
                                     85 	.globl _P0_2
                                     86 	.globl _P0_1
                                     87 	.globl _P0_0
                                     88 	.globl _B
                                     89 	.globl _ACC
                                     90 	.globl _PSW
                                     91 	.globl _IP
                                     92 	.globl _P3
                                     93 	.globl _IE
                                     94 	.globl _P2
                                     95 	.globl _SBUF
                                     96 	.globl _SCON
                                     97 	.globl _P1
                                     98 	.globl _TH1
                                     99 	.globl _TH0
                                    100 	.globl _TL1
                                    101 	.globl _TL0
                                    102 	.globl _TMOD
                                    103 	.globl _TCON
                                    104 	.globl _PCON
                                    105 	.globl _DPH
                                    106 	.globl _DPL
                                    107 	.globl _SP
                                    108 	.globl _P0
                                    109 	.globl _lcd_data
                                    110 	.globl _lcd_cmd
                                    111 	.globl _delay
                                    112 ;--------------------------------------------------------
                                    113 ; special function registers
                                    114 ;--------------------------------------------------------
                                    115 	.area RSEG    (ABS,DATA)
      000000                        116 	.org 0x0000
                           000080   117 _P0	=	0x0080
                           000081   118 _SP	=	0x0081
                           000082   119 _DPL	=	0x0082
                           000083   120 _DPH	=	0x0083
                           000087   121 _PCON	=	0x0087
                           000088   122 _TCON	=	0x0088
                           000089   123 _TMOD	=	0x0089
                           00008A   124 _TL0	=	0x008a
                           00008B   125 _TL1	=	0x008b
                           00008C   126 _TH0	=	0x008c
                           00008D   127 _TH1	=	0x008d
                           000090   128 _P1	=	0x0090
                           000098   129 _SCON	=	0x0098
                           000099   130 _SBUF	=	0x0099
                           0000A0   131 _P2	=	0x00a0
                           0000A8   132 _IE	=	0x00a8
                           0000B0   133 _P3	=	0x00b0
                           0000B8   134 _IP	=	0x00b8
                           0000D0   135 _PSW	=	0x00d0
                           0000E0   136 _ACC	=	0x00e0
                           0000F0   137 _B	=	0x00f0
                                    138 ;--------------------------------------------------------
                                    139 ; special function bits
                                    140 ;--------------------------------------------------------
                                    141 	.area RSEG    (ABS,DATA)
      000000                        142 	.org 0x0000
                           000080   143 _P0_0	=	0x0080
                           000081   144 _P0_1	=	0x0081
                           000082   145 _P0_2	=	0x0082
                           000083   146 _P0_3	=	0x0083
                           000084   147 _P0_4	=	0x0084
                           000085   148 _P0_5	=	0x0085
                           000086   149 _P0_6	=	0x0086
                           000087   150 _P0_7	=	0x0087
                           000088   151 _IT0	=	0x0088
                           000089   152 _IE0	=	0x0089
                           00008A   153 _IT1	=	0x008a
                           00008B   154 _IE1	=	0x008b
                           00008C   155 _TR0	=	0x008c
                           00008D   156 _TF0	=	0x008d
                           00008E   157 _TR1	=	0x008e
                           00008F   158 _TF1	=	0x008f
                           000090   159 _P1_0	=	0x0090
                           000091   160 _P1_1	=	0x0091
                           000092   161 _P1_2	=	0x0092
                           000093   162 _P1_3	=	0x0093
                           000094   163 _P1_4	=	0x0094
                           000095   164 _P1_5	=	0x0095
                           000096   165 _P1_6	=	0x0096
                           000097   166 _P1_7	=	0x0097
                           000098   167 _RI	=	0x0098
                           000099   168 _TI	=	0x0099
                           00009A   169 _RB8	=	0x009a
                           00009B   170 _TB8	=	0x009b
                           00009C   171 _REN	=	0x009c
                           00009D   172 _SM2	=	0x009d
                           00009E   173 _SM1	=	0x009e
                           00009F   174 _SM0	=	0x009f
                           0000A0   175 _P2_0	=	0x00a0
                           0000A1   176 _P2_1	=	0x00a1
                           0000A2   177 _P2_2	=	0x00a2
                           0000A3   178 _P2_3	=	0x00a3
                           0000A4   179 _P2_4	=	0x00a4
                           0000A5   180 _P2_5	=	0x00a5
                           0000A6   181 _P2_6	=	0x00a6
                           0000A7   182 _P2_7	=	0x00a7
                           0000A8   183 _EX0	=	0x00a8
                           0000A9   184 _ET0	=	0x00a9
                           0000AA   185 _EX1	=	0x00aa
                           0000AB   186 _ET1	=	0x00ab
                           0000AC   187 _ES	=	0x00ac
                           0000AF   188 _EA	=	0x00af
                           0000B0   189 _P3_0	=	0x00b0
                           0000B1   190 _P3_1	=	0x00b1
                           0000B2   191 _P3_2	=	0x00b2
                           0000B3   192 _P3_3	=	0x00b3
                           0000B4   193 _P3_4	=	0x00b4
                           0000B5   194 _P3_5	=	0x00b5
                           0000B6   195 _P3_6	=	0x00b6
                           0000B7   196 _P3_7	=	0x00b7
                           0000B0   197 _RXD	=	0x00b0
                           0000B1   198 _TXD	=	0x00b1
                           0000B2   199 _INT0	=	0x00b2
                           0000B3   200 _INT1	=	0x00b3
                           0000B4   201 _T0	=	0x00b4
                           0000B5   202 _T1	=	0x00b5
                           0000B6   203 _WR	=	0x00b6
                           0000B7   204 _RD	=	0x00b7
                           0000B8   205 _PX0	=	0x00b8
                           0000B9   206 _PT0	=	0x00b9
                           0000BA   207 _PX1	=	0x00ba
                           0000BB   208 _PT1	=	0x00bb
                           0000BC   209 _PS	=	0x00bc
                           0000D0   210 _P	=	0x00d0
                           0000D1   211 _F1	=	0x00d1
                           0000D2   212 _OV	=	0x00d2
                           0000D3   213 _RS0	=	0x00d3
                           0000D4   214 _RS1	=	0x00d4
                           0000D5   215 _F0	=	0x00d5
                           0000D6   216 _AC	=	0x00d6
                           0000D7   217 _CY	=	0x00d7
                                    218 ;--------------------------------------------------------
                                    219 ; overlayable register banks
                                    220 ;--------------------------------------------------------
                                    221 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        222 	.ds 8
                                    223 ;--------------------------------------------------------
                                    224 ; internal ram data
                                    225 ;--------------------------------------------------------
                                    226 	.area DSEG    (DATA)
      000000                        227 _main_dat_65536_30:
      000000                        228 	.ds 8
                                    229 ;--------------------------------------------------------
                                    230 ; overlayable items in internal ram
                                    231 ;--------------------------------------------------------
                                    232 	.area	OSEG    (OVR,DATA)
                                    233 ;--------------------------------------------------------
                                    234 ; Stack segment in internal ram
                                    235 ;--------------------------------------------------------
                                    236 	.area	SSEG
      000000                        237 __start__stack:
      000000                        238 	.ds	1
                                    239 
                                    240 ;--------------------------------------------------------
                                    241 ; indirectly addressable internal ram data
                                    242 ;--------------------------------------------------------
                                    243 	.area ISEG    (DATA)
                                    244 ;--------------------------------------------------------
                                    245 ; absolute internal ram data
                                    246 ;--------------------------------------------------------
                                    247 	.area IABS    (ABS,DATA)
                                    248 	.area IABS    (ABS,DATA)
                                    249 ;--------------------------------------------------------
                                    250 ; bit data
                                    251 ;--------------------------------------------------------
                                    252 	.area BSEG    (BIT)
                                    253 ;--------------------------------------------------------
                                    254 ; paged external ram data
                                    255 ;--------------------------------------------------------
                                    256 	.area PSEG    (PAG,XDATA)
                                    257 ;--------------------------------------------------------
                                    258 ; external ram data
                                    259 ;--------------------------------------------------------
                                    260 	.area XSEG    (XDATA)
                                    261 ;--------------------------------------------------------
                                    262 ; absolute external ram data
                                    263 ;--------------------------------------------------------
                                    264 	.area XABS    (ABS,XDATA)
                                    265 ;--------------------------------------------------------
                                    266 ; external initialized ram data
                                    267 ;--------------------------------------------------------
                                    268 	.area XISEG   (XDATA)
                                    269 	.area HOME    (CODE)
                                    270 	.area GSINIT0 (CODE)
                                    271 	.area GSINIT1 (CODE)
                                    272 	.area GSINIT2 (CODE)
                                    273 	.area GSINIT3 (CODE)
                                    274 	.area GSINIT4 (CODE)
                                    275 	.area GSINIT5 (CODE)
                                    276 	.area GSINIT  (CODE)
                                    277 	.area GSFINAL (CODE)
                                    278 	.area CSEG    (CODE)
                                    279 ;--------------------------------------------------------
                                    280 ; interrupt vector
                                    281 ;--------------------------------------------------------
                                    282 	.area HOME    (CODE)
      000000                        283 __interrupt_vect:
      000000 02r00r00         [24]  284 	ljmp	__sdcc_gsinit_startup
                                    285 ;--------------------------------------------------------
                                    286 ; global & static initialisations
                                    287 ;--------------------------------------------------------
                                    288 	.area HOME    (CODE)
                                    289 	.area GSINIT  (CODE)
                                    290 	.area GSFINAL (CODE)
                                    291 	.area GSINIT  (CODE)
                                    292 	.globl __sdcc_gsinit_startup
                                    293 	.globl __sdcc_program_startup
                                    294 	.globl __start__stack
                                    295 	.globl __mcs51_genXINIT
                                    296 	.globl __mcs51_genXRAMCLEAR
                                    297 	.globl __mcs51_genRAMCLEAR
                                    298 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  299 	ljmp	__sdcc_program_startup
                                    300 ;--------------------------------------------------------
                                    301 ; Home
                                    302 ;--------------------------------------------------------
                                    303 	.area HOME    (CODE)
                                    304 	.area HOME    (CODE)
      000003                        305 __sdcc_program_startup:
      000003 02r00r00         [24]  306 	ljmp	_main
                                    307 ;	return from main will return to caller
                                    308 ;--------------------------------------------------------
                                    309 ; code
                                    310 ;--------------------------------------------------------
                                    311 	.area CSEG    (CODE)
                                    312 ;------------------------------------------------------------
                                    313 ;Allocation info for local variables in function 'main'
                                    314 ;------------------------------------------------------------
                                    315 ;dat                       Allocated with name '_main_dat_65536_30'
                                    316 ;j                         Allocated to registers r7 
                                    317 ;------------------------------------------------------------
                                    318 ;	lcd.c:10: int main(void){
                                    319 ;	-----------------------------------------
                                    320 ;	 function main
                                    321 ;	-----------------------------------------
      000000                        322 _main:
                           000007   323 	ar7 = 0x07
                           000006   324 	ar6 = 0x06
                           000005   325 	ar5 = 0x05
                           000004   326 	ar4 = 0x04
                           000003   327 	ar3 = 0x03
                           000002   328 	ar2 = 0x02
                           000001   329 	ar1 = 0x01
                           000000   330 	ar0 = 0x00
                                    331 ;	lcd.c:11: unsigned char dat[]="welcome";
      000000 75*00 77         [24]  332 	mov	_main_dat_65536_30,#0x77
      000003 75*01 65         [24]  333 	mov	(_main_dat_65536_30 + 0x0001),#0x65
      000006 75*02 6C         [24]  334 	mov	(_main_dat_65536_30 + 0x0002),#0x6c
      000009 75*03 63         [24]  335 	mov	(_main_dat_65536_30 + 0x0003),#0x63
      00000C 75*04 6F         [24]  336 	mov	(_main_dat_65536_30 + 0x0004),#0x6f
      00000F 75*05 6D         [24]  337 	mov	(_main_dat_65536_30 + 0x0005),#0x6d
      000012 75*06 65         [24]  338 	mov	(_main_dat_65536_30 + 0x0006),#0x65
      000015 75*07 00         [24]  339 	mov	(_main_dat_65536_30 + 0x0007),#0x00
                                    340 ;	lcd.c:12: lcd_cmd(0x38);//2 lines and 5x7 matrix
      000018 75 82 38         [24]  341 	mov	dpl,#0x38
      00001B 12r00r76         [24]  342 	lcall	_lcd_cmd
                                    343 ;	lcd.c:13: lcd_cmd(0x01);//clear display
      00001E 75 82 01         [24]  344 	mov	dpl,#0x01
      000021 12r00r76         [24]  345 	lcall	_lcd_cmd
                                    346 ;	lcd.c:14: lcd_cmd(0x06);// increment cursor
      000024 75 82 06         [24]  347 	mov	dpl,#0x06
      000027 12r00r76         [24]  348 	lcall	_lcd_cmd
                                    349 ;	lcd.c:15: lcd_cmd(0x0E);//display on curor blinking
      00002A 75 82 0E         [24]  350 	mov	dpl,#0x0e
      00002D 12r00r76         [24]  351 	lcall	_lcd_cmd
                                    352 ;	lcd.c:16: lcd_cmd(0x80);//force cursor to begining to 1st line
      000030 75 82 80         [24]  353 	mov	dpl,#0x80
      000033 12r00r76         [24]  354 	lcall	_lcd_cmd
                                    355 ;	lcd.c:18: for(j=0;j<strlen(dat);j++){
      000036 7F 00            [12]  356 	mov	r7,#0x00
      000038                        357 00106$:
      000038 90r00r00         [24]  358 	mov	dptr,#_main_dat_65536_30
      00003B 75 F0 40         [24]  359 	mov	b,#0x40
      00003E C0 07            [24]  360 	push	ar7
      000040 12r00r00         [24]  361 	lcall	_strlen
      000043 AD 82            [24]  362 	mov	r5,dpl
      000045 AE 83            [24]  363 	mov	r6,dph
      000047 D0 07            [24]  364 	pop	ar7
      000049 8F 03            [24]  365 	mov	ar3,r7
      00004B 7C 00            [12]  366 	mov	r4,#0x00
      00004D C3               [12]  367 	clr	c
      00004E EB               [12]  368 	mov	a,r3
      00004F 9D               [12]  369 	subb	a,r5
      000050 EC               [12]  370 	mov	a,r4
      000051 9E               [12]  371 	subb	a,r6
      000052 50 10            [24]  372 	jnc	00103$
                                    373 ;	lcd.c:19: lcd_data(dat[j]);
      000054 EF               [12]  374 	mov	a,r7
      000055 24r00            [12]  375 	add	a,#_main_dat_65536_30
      000057 F9               [12]  376 	mov	r1,a
      000058 87 82            [24]  377 	mov	dpl,@r1
      00005A C0 07            [24]  378 	push	ar7
      00005C 12r00r66         [24]  379 	lcall	_lcd_data
      00005F D0 07            [24]  380 	pop	ar7
                                    381 ;	lcd.c:18: for(j=0;j<strlen(dat);j++){
      000061 0F               [12]  382 	inc	r7
                                    383 ;	lcd.c:21: while(1){
      000062 80 D4            [24]  384 	sjmp	00106$
      000064                        385 00103$:
                                    386 ;	lcd.c:23: }
      000064 80 FE            [24]  387 	sjmp	00103$
                                    388 ;------------------------------------------------------------
                                    389 ;Allocation info for local variables in function 'lcd_data'
                                    390 ;------------------------------------------------------------
                                    391 ;datas                     Allocated to registers 
                                    392 ;------------------------------------------------------------
                                    393 ;	lcd.c:24: void lcd_data(unsigned char datas){
                                    394 ;	-----------------------------------------
                                    395 ;	 function lcd_data
                                    396 ;	-----------------------------------------
      000066                        397 _lcd_data:
      000066 85 82 90         [24]  398 	mov	_P1,dpl
                                    399 ;	lcd.c:26: rs=1;
                                    400 ;	assignBit
      000069 D2 B0            [12]  401 	setb	_P3_0
                                    402 ;	lcd.c:27: en=0;
                                    403 ;	assignBit
      00006B C2 B2            [12]  404 	clr	_P3_2
                                    405 ;	lcd.c:28: delay(10);
      00006D 75 82 0A         [24]  406 	mov	dpl,#0x0a
      000070 12r00r86         [24]  407 	lcall	_delay
                                    408 ;	lcd.c:29: en=1;
                                    409 ;	assignBit
      000073 D2 B2            [12]  410 	setb	_P3_2
                                    411 ;	lcd.c:30: }
      000075 22               [24]  412 	ret
                                    413 ;------------------------------------------------------------
                                    414 ;Allocation info for local variables in function 'lcd_cmd'
                                    415 ;------------------------------------------------------------
                                    416 ;cmd                       Allocated to registers 
                                    417 ;------------------------------------------------------------
                                    418 ;	lcd.c:31: void lcd_cmd(unsigned char cmd){
                                    419 ;	-----------------------------------------
                                    420 ;	 function lcd_cmd
                                    421 ;	-----------------------------------------
      000076                        422 _lcd_cmd:
      000076 85 82 90         [24]  423 	mov	_P1,dpl
                                    424 ;	lcd.c:33: rs=0;
                                    425 ;	assignBit
      000079 C2 B0            [12]  426 	clr	_P3_0
                                    427 ;	lcd.c:34: en=0;
                                    428 ;	assignBit
      00007B C2 B2            [12]  429 	clr	_P3_2
                                    430 ;	lcd.c:35: delay(10);
      00007D 75 82 0A         [24]  431 	mov	dpl,#0x0a
      000080 12r00r86         [24]  432 	lcall	_delay
                                    433 ;	lcd.c:36: en=1;
                                    434 ;	assignBit
      000083 D2 B2            [12]  435 	setb	_P3_2
                                    436 ;	lcd.c:37: }
      000085 22               [24]  437 	ret
                                    438 ;------------------------------------------------------------
                                    439 ;Allocation info for local variables in function 'delay'
                                    440 ;------------------------------------------------------------
                                    441 ;ms                        Allocated to registers r7 
                                    442 ;i                         Allocated to registers r6 
                                    443 ;j                         Allocated to registers r5 
                                    444 ;------------------------------------------------------------
                                    445 ;	lcd.c:38: void delay(unsigned char ms){
                                    446 ;	-----------------------------------------
                                    447 ;	 function delay
                                    448 ;	-----------------------------------------
      000086                        449 _delay:
      000086 AF 82            [24]  450 	mov	r7,dpl
                                    451 ;	lcd.c:40: for(i=0;i<ms;i++)
      000088 7E 00            [12]  452 	mov	r6,#0x00
      00008A                        453 00107$:
      00008A C3               [12]  454 	clr	c
      00008B EE               [12]  455 	mov	a,r6
      00008C 9F               [12]  456 	subb	a,r7
      00008D 50 0D            [24]  457 	jnc	00109$
                                    458 ;	lcd.c:41: for(j=0;j<ms;j++);
      00008F 7D 00            [12]  459 	mov	r5,#0x00
      000091                        460 00104$:
      000091 C3               [12]  461 	clr	c
      000092 ED               [12]  462 	mov	a,r5
      000093 9F               [12]  463 	subb	a,r7
      000094 50 03            [24]  464 	jnc	00108$
      000096 0D               [12]  465 	inc	r5
      000097 80 F8            [24]  466 	sjmp	00104$
      000099                        467 00108$:
                                    468 ;	lcd.c:40: for(i=0;i<ms;i++)
      000099 0E               [12]  469 	inc	r6
      00009A 80 EE            [24]  470 	sjmp	00107$
      00009C                        471 00109$:
                                    472 ;	lcd.c:42: }
      00009C 22               [24]  473 	ret
                                    474 	.area CSEG    (CODE)
                                    475 	.area CONST   (CODE)
                                    476 	.area XINIT   (CODE)
                                    477 	.area CABS    (ABS,CODE)
